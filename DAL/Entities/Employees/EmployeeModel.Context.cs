//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL.Entities.Employees
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class EmployeeDBGIS2019Entities : DbContext
    {
        public EmployeeDBGIS2019Entities()
            : base("name=EmployeeDBGIS2019Entities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<DivisionTBL> DivisionTBLs { get; set; }
        public virtual DbSet<EmployeeOffType> EmployeeOffTypes { get; set; }
        public virtual DbSet<EmployeeTBL> EmployeeTBLs { get; set; }
        public virtual DbSet<JobTitleTBL> JobTitleTBLs { get; set; }
        public virtual DbSet<NationalityTBL> NationalityTBLs { get; set; }
        public virtual DbSet<GROUP> GROUPS { get; set; }
    
        public virtual ObjectResult<DivisionTBL> GetAllDivisions()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetAllDivisions");
        }
    
        public virtual ObjectResult<DivisionTBL> GetAllDivisions(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetAllDivisions", mergeOption);
        }
    
        public virtual ObjectResult<EmployeeOffType> GetAllEmployeeOffTypes()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetAllEmployeeOffTypes");
        }
    
        public virtual ObjectResult<EmployeeOffType> GetAllEmployeeOffTypes(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetAllEmployeeOffTypes", mergeOption);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetAllEmployees()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetAllEmployees");
        }
    
        public virtual ObjectResult<EmployeeTBL> GetAllEmployees(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetAllEmployees", mergeOption);
        }
    
        public virtual ObjectResult<JobTitleTBL> GetAllJobTitles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetAllJobTitles");
        }
    
        public virtual ObjectResult<JobTitleTBL> GetAllJobTitles(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetAllJobTitles", mergeOption);
        }
    
        public virtual ObjectResult<NationalityTBL> GetAllNationalitys()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetAllNationalitys");
        }
    
        public virtual ObjectResult<NationalityTBL> GetAllNationalitys(MergeOption mergeOption)
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetAllNationalitys", mergeOption);
        }
    
        public virtual ObjectResult<DivisionTBL> GetDivisionsByParam(Nullable<int> divisionID, string arName, string enName)
        {
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetDivisionsByParam", divisionIDParameter, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<DivisionTBL> GetDivisionsByParam(Nullable<int> divisionID, string arName, string enName, MergeOption mergeOption)
        {
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetDivisionsByParam", mergeOption, divisionIDParameter, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeOffType> GetEmployeeOffTypesByParam(Nullable<int> employeeOffTypeID, string arName, string enName)
        {
            var employeeOffTypeIDParameter = employeeOffTypeID.HasValue ?
                new ObjectParameter("EmployeeOffTypeID", employeeOffTypeID) :
                new ObjectParameter("EmployeeOffTypeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetEmployeeOffTypesByParam", employeeOffTypeIDParameter, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeOffType> GetEmployeeOffTypesByParam(Nullable<int> employeeOffTypeID, string arName, string enName, MergeOption mergeOption)
        {
            var employeeOffTypeIDParameter = employeeOffTypeID.HasValue ?
                new ObjectParameter("EmployeeOffTypeID", employeeOffTypeID) :
                new ObjectParameter("EmployeeOffTypeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetEmployeeOffTypesByParam", mergeOption, employeeOffTypeIDParameter, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetEmployeesByParam(Nullable<int> employeeID, string arName, string enName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> bithDate, Nullable<int> nationalityID, Nullable<int> divisionID, Nullable<int> jobTitleID, string phoneNumber, Nullable<bool> isActiveStatus, string emailAddress, Nullable<System.DateTime> offDate, Nullable<int> offTypeID)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var bithDateParameter = bithDate.HasValue ?
                new ObjectParameter("BithDate", bithDate) :
                new ObjectParameter("BithDate", typeof(System.DateTime));
    
            var nationalityIDParameter = nationalityID.HasValue ?
                new ObjectParameter("NationalityID", nationalityID) :
                new ObjectParameter("NationalityID", typeof(int));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var jobTitleIDParameter = jobTitleID.HasValue ?
                new ObjectParameter("JobTitleID", jobTitleID) :
                new ObjectParameter("JobTitleID", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var isActiveStatusParameter = isActiveStatus.HasValue ?
                new ObjectParameter("IsActiveStatus", isActiveStatus) :
                new ObjectParameter("IsActiveStatus", typeof(bool));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var offDateParameter = offDate.HasValue ?
                new ObjectParameter("OffDate", offDate) :
                new ObjectParameter("OffDate", typeof(System.DateTime));
    
            var offTypeIDParameter = offTypeID.HasValue ?
                new ObjectParameter("OffTypeID", offTypeID) :
                new ObjectParameter("OffTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetEmployeesByParam", employeeIDParameter, arNameParameter, enNameParameter, startDateParameter, bithDateParameter, nationalityIDParameter, divisionIDParameter, jobTitleIDParameter, phoneNumberParameter, isActiveStatusParameter, emailAddressParameter, offDateParameter, offTypeIDParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetEmployeesByParam(Nullable<int> employeeID, string arName, string enName, Nullable<System.DateTime> startDate, Nullable<System.DateTime> bithDate, Nullable<int> nationalityID, Nullable<int> divisionID, Nullable<int> jobTitleID, string phoneNumber, Nullable<bool> isActiveStatus, string emailAddress, Nullable<System.DateTime> offDate, Nullable<int> offTypeID, MergeOption mergeOption)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            var startDateParameter = startDate.HasValue ?
                new ObjectParameter("StartDate", startDate) :
                new ObjectParameter("StartDate", typeof(System.DateTime));
    
            var bithDateParameter = bithDate.HasValue ?
                new ObjectParameter("BithDate", bithDate) :
                new ObjectParameter("BithDate", typeof(System.DateTime));
    
            var nationalityIDParameter = nationalityID.HasValue ?
                new ObjectParameter("NationalityID", nationalityID) :
                new ObjectParameter("NationalityID", typeof(int));
    
            var divisionIDParameter = divisionID.HasValue ?
                new ObjectParameter("DivisionID", divisionID) :
                new ObjectParameter("DivisionID", typeof(int));
    
            var jobTitleIDParameter = jobTitleID.HasValue ?
                new ObjectParameter("JobTitleID", jobTitleID) :
                new ObjectParameter("JobTitleID", typeof(int));
    
            var phoneNumberParameter = phoneNumber != null ?
                new ObjectParameter("PhoneNumber", phoneNumber) :
                new ObjectParameter("PhoneNumber", typeof(string));
    
            var isActiveStatusParameter = isActiveStatus.HasValue ?
                new ObjectParameter("IsActiveStatus", isActiveStatus) :
                new ObjectParameter("IsActiveStatus", typeof(bool));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            var offDateParameter = offDate.HasValue ?
                new ObjectParameter("OffDate", offDate) :
                new ObjectParameter("OffDate", typeof(System.DateTime));
    
            var offTypeIDParameter = offTypeID.HasValue ?
                new ObjectParameter("OffTypeID", offTypeID) :
                new ObjectParameter("OffTypeID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetEmployeesByParam", mergeOption, employeeIDParameter, arNameParameter, enNameParameter, startDateParameter, bithDateParameter, nationalityIDParameter, divisionIDParameter, jobTitleIDParameter, phoneNumberParameter, isActiveStatusParameter, emailAddressParameter, offDateParameter, offTypeIDParameter);
        }
    
        public virtual ObjectResult<JobTitleTBL> GetJobTitlesByParam(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetJobTitlesByParam", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<JobTitleTBL> GetJobTitlesByParam(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetJobTitlesByParam", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<DivisionTBL> GetLikeDivisions(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetLikeDivisions", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<DivisionTBL> GetLikeDivisions(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DivisionTBL>("GetLikeDivisions", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeOffType> GetLikeEmployeeOffTypes(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetLikeEmployeeOffTypes", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeOffType> GetLikeEmployeeOffTypes(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeOffType>("GetLikeEmployeeOffTypes", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetLikeEmployees(Nullable<int> employeeID, string arName, string enName, string emailAddress)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetLikeEmployees", employeeIDParameter, arNameParameter, enNameParameter, emailAddressParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetLikeEmployees(Nullable<int> employeeID, string arName, string enName, string emailAddress, MergeOption mergeOption)
        {
            var employeeIDParameter = employeeID.HasValue ?
                new ObjectParameter("EmployeeID", employeeID) :
                new ObjectParameter("EmployeeID", typeof(int));
    
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            var emailAddressParameter = emailAddress != null ?
                new ObjectParameter("EmailAddress", emailAddress) :
                new ObjectParameter("EmailAddress", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetLikeEmployees", mergeOption, employeeIDParameter, arNameParameter, enNameParameter, emailAddressParameter);
        }
    
        public virtual ObjectResult<JobTitleTBL> GetLikeJobTitles(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetLikeJobTitles", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<JobTitleTBL> GetLikeJobTitles(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<JobTitleTBL>("GetLikeJobTitles", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<NationalityTBL> GetLikeNationalitys(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetLikeNationalitys", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<NationalityTBL> GetLikeNationalitys(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetLikeNationalitys", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<NationalityTBL> GetNationalitysByParam(string arName, string enName)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetNationalitysByParam", arNameParameter, enNameParameter);
        }
    
        public virtual ObjectResult<NationalityTBL> GetNationalitysByParam(string arName, string enName, MergeOption mergeOption)
        {
            var arNameParameter = arName != null ?
                new ObjectParameter("ArName", arName) :
                new ObjectParameter("ArName", typeof(string));
    
            var enNameParameter = enName != null ?
                new ObjectParameter("EnName", enName) :
                new ObjectParameter("EnName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<NationalityTBL>("GetNationalitysByParam", mergeOption, arNameParameter, enNameParameter);
        }
    
        public virtual int ChangePassWord_Proc(string userName, string passWord)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ChangePassWord_Proc", userNameParameter, passWordParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetUserByPassWord_Proc(string userName, string passWord)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetUserByPassWord_Proc", userNameParameter, passWordParameter);
        }
    
        public virtual ObjectResult<EmployeeTBL> GetUserByPassWord_Proc(string userName, string passWord, MergeOption mergeOption)
        {
            var userNameParameter = userName != null ?
                new ObjectParameter("UserName", userName) :
                new ObjectParameter("UserName", typeof(string));
    
            var passWordParameter = passWord != null ?
                new ObjectParameter("PassWord", passWord) :
                new ObjectParameter("PassWord", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<EmployeeTBL>("GetUserByPassWord_Proc", mergeOption, userNameParameter, passWordParameter);
        }
    }
}
